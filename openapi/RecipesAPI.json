{
   "openapi": "3.0.0",
   "info": {
      "version": "1.0.0",
      "title": "Recipe API",
      "description": "Recipe API"
   },
   "paths": {
      "/recipes": {
         "get": {
            "tags": [
               "RECIPE"
            ],
            "summary": "Returns all recipes",
            "description": "Returns all recipes",
            "operationId": "findRecipes",
            "responses": {
               "200": {
                  "description": "recipe response",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "array",
                           "items": {
                              "$ref": "#/components/schemas/Recipe"
                           }
                        }
                     }
                  }
               }
            }
         },
         "post": {
            "tags": [
               "RECIPE"
            ],
            "summary": "Creates a new recipe.",
            "description": "Creates a new recipe.",
            "operationId": "addRecipe",
            "requestBody": {
               "description": "Recipe to add",
               "required": true,
               "content": {
                  "application/json": {
                     "schema": {
                        "$ref": "#/components/schemas/NewRecipe"
                     }
                  }
               }
            },
            "responses": {
               "201": {
                  "description": "recipe response",
                  "content": {
                     "application/json": {
                        "schema": {
                           "$ref": "#/components/schemas/Recipe"
                        }
                     }
                  }
               }
            }
         }
      },
      "/recipes/{id}": {
         "get": {
            "tags": [
               "RECIPE"
            ],
            "summary": "Returns a recipe based on a single ID",
            "description": "Returns a recipe based on a single ID",
            "operationId": "find recipe by id",
            "parameters": [
               {
                  "name": "id",
                  "in": "path",
                  "description": "ID of recipe to fetch",
                  "required": true,
                  "schema": {
                     "type": "string"
                  },
                  "example": "someid"
               }
            ],
            "responses": {
               "200": {
                  "description": "recipe response",
                  "content": {
                     "application/json": {
                        "schema": {
                           "$ref": "#/components/schemas/Recipe"
                        }
                     }
                  }
               }
            }
         },
         "delete": {
            "tags": [
               "RECIPE"
            ],
            "summary": "deletes a single recipe based on the ID supplied",
            "description": "deletes a single recipe based on the ID supplied",
            "operationId": "deleteRecipe",
            "parameters": [
               {
                  "name": "id",
                  "in": "path",
                  "description": "ID of recipe to delete",
                  "required": true,
                  "schema": {
                     "type": "string"
                  },
                  "example": "someid"
               }
            ],
            "responses": {
               "204": {
                  "description": "recipe deleted"
               }
            }
         },
         "put": {
            "tags": [
               "RECIPE"
            ],
            "parameters": [
               {
                  "name": "id",
                  "in": "path",
                  "description": "ID of recipe to update",
                  "required": true,
                  "schema": {
                     "type": "string"
                  },
                  "example": "someid"
               }
            ],
            "summary": "Updates a recipe.",
            "description": "Updates recipe.",
            "operationId": "updateRecipe",
            "requestBody": {
               "description": "Recipe to update",
               "required": true,
               "content": {
                  "application/json": {
                     "schema": {
                        "$ref": "#/components/schemas/Recipe"
                     }
                  }
               }
            },
            "responses": {
               "200": {
                  "description": "recipe response",
                  "content": {
                     "application/json": {
                        "schema": {
                           "$ref": "#/components/schemas/Recipe"
                        }
                     }
                  }
               }
            }
         }
      },
      "/recipes/searches": {
         "post": {
            "tags": [
               "RECIPE"
            ],
            "summary": "Searches recipes.",
            "description": "Searches recipes.",
            "operationId": "searchRecipes",
            "requestBody": {
               "description": "Search parameters",
               "required": true,
               "content": {
                  "application/json": {
                     "schema": {
                        "$ref": "#/components/schemas/RecipesSearch"
                     }
                  }
               }
            },
            "responses": {
               "200": {
                  "description": "recipe response",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "array",
                           "items": {
                              "$ref": "#/components/schemas/Recipe"
                           }
                        }
                     }
                  }
               }
            }
         }
      }
   },
   "components": {
      "schemas": {
         "Recipe": {
            "allOf": [
               {
                  "$ref": "#/components/schemas/NewRecipe"
               },
               {
                  "type": "object",
                  "properties": {
                     "id": {
                        "type": "string",
                        "example": "someid"
                     }
                  }
               }
            ]
         },
         "NewRecipe": {
            "type": "object",
            "required": [
               "name"
            ],
            "properties": {
               "name": {
                  "type": "string",
                  "minLength": 1,
                  "example": "pasta carbonara"
               },
               "isVegetarian": {
                  "type": "boolean",
                  "example": false
               },
               "numberOfServings": {
                  "type": "integer",
                  "minimum": 1,
                  "example": 3
               },
               "instructions": {
                  "type": "string",
                  "minLength": 1,
                  "example": "take pasta, add carbonara"
               },
               "ingredients": {
                  "type": "array",
                  "items": {
                     "type": "string",
                     "example": "pasta"
                  }
               }
            }
         },
         "RecipesSearch": {
            "type": "object",
            "properties": {
               "instructionsSearch": {
                  "type": "string",
                  "minLength": 1,
                  "example": "pasta"
               },
               "isVegetarian": {
                  "type": "boolean",
                  "example": false
               },
               "numberOfServings": {
                  "type": "integer",
                  "minimum": 1,
                  "example": 3
               },
               "includeIngredients": {
                  "type": "array",
                  "items": {
                     "type": "string",
                     "minLength": 1,
                     "example": "pasta"
                  }
               },
               "excludeIngredients": {
                  "type": "array",
                  "items": {
                     "type": "string",
                     "minLength": 1,
                     "example": "onion"
                  }
               }
            }
         }
      }
   }
}